pi:10
15:1
?`:`
seq(1, 20)
seq(1, 20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- c(num_vect < 1)
tf <- num_vect < 1
tf
num_vect >= 6
my_char = c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Theodor")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:3, sep="-")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- (data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- (1:20, nrow = 4, ncol = 5)
my_matrix2 <- (c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- (c(1:20) nrow = 4, ncol = 5)
my_matrix2 <- (1:20 nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
play()
my_data$age
View(my_data)
my_data$Bill
my_data$,Bill
my_data$Bill,
my_data,$Bill
my_data$rating
nxt()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 !=7
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 < 4)
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evalutes(function(x){x+1}, 6)
evalute(function(x){x+1}, 6)
evaluate(function(x){x+1}, 6)
evalvuate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("SUP BITCHES")
submit
submit()
submit()
submit()
submit()
mad_libs("fart", "butt", "face")
submit()
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags[,], unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
0
quit()
Rprof()
x <- 3
Rprof(NULL)
summaryRprof()
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
plot(x, y)
e
plot(x, e)
plot(x, e, y)
plot.xy(x, e, y)
plot(e, y)
plot(y,e)
?rbinom
x <- 1:6
length(x)
y <- as.character(x)
y
length(y)
t <- "hello world this is test"
length(t)
x <- list("hello", 69, TRUE, "world")
x
length(x)
lenth(x$1)
lenth(x[1])
length(x[1])
length(x$1)
length(x$69)
length(x[1])
x[1]
x[[1]]
x[[[1]]]
x <- 1:3
y <- 10:12
t <- cbind(x, y)
t
t$x
t[1]
t[1,]
t[,1]
t[,x]
t[,'x']
t2 <- data.frame(t)
t2
t2$x
t2$y
t2$y < 12
t2$y < 1
x <- [1,2,3,4,5,6,7]
x <- c[1,2,3,4,5,6,7]
x <- c(1,2,3,4,5,6,7)
y <- x[2]
class(y)
class(x)
y <- x[[2][]
y <- x[[2]]
class(y)
x <- list("foo"=1:4, "bar"=0.6)
x
x$bar
x["bar"]
x <- list(foo=1:4, bar=0.6)
x
x$foo
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
x  <- c(1, 2, 3)
x
type(x)
class(x)
makeVector(x)
makeVector(5, 3, 2)
makeVector([5, 3, 2])
makeVector(c(5, 3, 2))
makeVector(c(5, 3, 2))
makeVector(x
)
x = numeric()
makeVector(x = numeric(5, 2))
makeVector(x = numeric(5))
makeVector(x = numeric())
cachmean(x)
x <- c(1, 3, 5)
chacemean(x)
cachemean(x)
cachemean(x, 3)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
cachemean(x, 3)
class(x)
a <- makeVector(18:45)
a
a <- makeVector(18:45)
cachemean(a)
x <- makeVector(18:45)
x$get()
x$getmean()
cachemean(x)
x$getmean()
cachemean(x)
B = matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
class(B)
B <- matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) )
cacheSolve(a)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) )
cacheSolve(a)
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3)
)
b <- matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3)
cacheSolve(a)
solve(b)
a <- makeCacheMatrix(matrix(c(12, 4, 23, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
solve(matrix(c(12, 4, 23, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a$getinv
a$getinv()
a$setin(0)
cacheSolve(a)
a$setinv(NULL)
cacheSolve(a)
# just getting some data
library(ggplot2)
data(diamonds)
# basic plotting
plot(diamonds$carat, diamonds$price, col = diamonds$color,
pch = as.numeric(diamonds$cut))
install.packages("ggplot2")
# just getting some data
library(ggplot2)
data(diamonds)
# basic plotting
plot(diamonds$carat, diamonds$price, col = diamonds$color,
pch = as.numeric(diamonds$cut))
ggplot(diamonds, aes(carat, price, col = color, shape = cut)) +
geom_point()
ggplot(diamonds, aes(carat, price, col = D, shape = ideal)) +
geom_point()
View(diamonds)
ggplot(diamonds, aes(carat, price, col = "D", shape = "Ideal")) +
geom_point()
data(cars)
dataset(cars)
data(cars)
head(cars)
ggplot(cars)
?ggplot
ggplot()
View(cars)
ggplot(cars$speed, cars$dist)
ggplot(cars, aes(speed, dist))
ggplot(cars, aes(speed, dist)) + geom_line()
ggplot(cars, aes(speed, dist)) + geom()
ggplot(cars, aes(speed, dist)) + geom_point()
data(mtcars)
View(cars)
data(mtcars)
data(mtcars)
names(mtcars)
View(mtcars)
ggplot(mtcars, aes(mpg, cyl)) + geom_point()
ggplot(mtcars, aes(cyl, mpg)) + geom_point()
ggplot(mtcars, aes(cyl, mpg), col = hp) + geom_point()
ggplot(mtcars, aes(cyl, mpg, hp)) + geom_point()
data(diamonds)
View(diamonds)
help(diamonds)
data(mtcars)
View(mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_line()
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + geom_smooth()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(drat ~ wt)
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(hp)
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(disp ~ hp)
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
install.packages(c('rzmq','repr'),
repos = c('http://irkernel.github.io/', getOption('repos')))
install.packages(c('IRkernel'),
repos = c('http://irkernel.github.io/', getOption('repos')))
library("repr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rzmq", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rzmq", unload=TRUE)
library("rzmq", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("cppzmq")
library("rzmq", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
IRkernel::installspec()
install.packages("devtools")
install.packages('RCurl')
library(devtools)
require('devtools')
install_github('armstrtw/rzmq')
install_github('IRkernel/repr')
require('devtools')
install_github('IRkernel/IRdisplay')
install_github('IRkernel/IRkernel')
install_github('armstrtw/rzmq')
install_packages(c('devtools'))
install_github("rgbkrk/rzmq")
install.packages(c('rzmq'),repos = c('http://irkernel.github.io/', getOption('repos')))
library("rzmq", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_name_tool -change /usr/local/lib/libzmq.4.dylib /usr/local/lib/libzmq.5.dylib /Library/Frameworks/R.framework/Versions/3.2/Resources/library/rzmq/libs/rzmq.so
detach("package:rzmq", unload=TRUE)
library("rzmq", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
IRkernel::installspec()
library("IRdisplay", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
sudo IRkernel::installspec(user = FALSE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
setwd("~/Documents/data-proj/nypd-sqf")
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
p
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point()
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point() + facet_grid(contraban ~ .)
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point() + facet_grid(contrabn ~ .)
ggplot(contra, aes(x=months, y=prop, color=contrabn)) + geom_point() + facet_grid(race ~ .)
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point() + facet_grid(contrabn ~ .)
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point() + facet_grid(contrabn ~ ., scales="free")
ggplot(contra, aes(x=months, y=prop, color=race)) + geom_point() + facet_grid(contrabn ~ ., scales="free") + geom_smooth()
source('~/Documents/data-proj/nypd-sqf/contraban.R')
p
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
View(contra)
ifelse(contra$contrabn == 1, 'Contraban Found', 'Not Found')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
library("grid")
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/searched.R')
View(searched)
source('~/Documents/data-proj/nypd-sqf/searched.R')
source('~/Documents/data-proj/nypd-sqf/searched.R')
source('~/Documents/data-proj/nypd-sqf/searched.R')
source('~/Documents/data-proj/nypd-sqf/searched.R')
source('~/Documents/data-proj/nypd-sqf/searched.R')
gg
source('~/Documents/data-proj/nypd-sqf/searched.R')
gg
source('~/Documents/data-proj/nypd-sqf/searched.R')
gg
source('~/Documents/data-proj/nypd-sqf/searched.R')
source('~/Documents/data-proj/nypd-sqf/searched.R')
gg
ggplot(searched, aes(x=months, y=race_prop)) +
geom_point() + facet_grid(race ~ .)
ggplot(searched, aes(x=months, y=race_prop, color=searched)) +
geom_point() + facet_grid(race ~ .)
ggplot(searched, aes(x=months, y=race_prop, color=searched)) +
geom_point() + facet_grid(race ~ .) + geom_smooth(method='loess')
ggplot(searched, aes(x=months, y=race_prop, color=searched)) +
geom_point() + facet_grid(race ~ .) + geom_smooth(method='loess') +
theme_minimal(base_size = 20, base_family = "Helvetica Neue Light")
ggplot(searched, aes(x=months, y=race_prop, color=searched)) +
geom_point() + facet_grid(race ~ .) + geom_smooth(method='loess') +
theme_bw(base_size = 14, base_family = "Helvetica Neue Light")
source('~/Documents/data-proj/nypd-sqf/contraban.R')
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
source('~/Documents/data-proj/nypd-sqf/contraban.R')
gg
